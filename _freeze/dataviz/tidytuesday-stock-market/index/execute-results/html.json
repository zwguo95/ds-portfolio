{
  "hash": "f752808334e7a5001afb84cbaf4d92d9",
  "result": {
    "markdown": "---\ntitle: \"TIdyTuesday: Tech Company Stock Prices\"\ndate: 02/07/2023\nauthor:\n  - name: Zhaowen Guo\n    url: \"https://www.linkedin.com/in/zhaowen-guo-20535312a/\"\ntitle-block-banner: true\nformat:\n  html:\n    theme: flatly\n    code-fold: false\n    code-tools: false\n    toc: false\n    number-sections: false\nlink-citations: yes\ncategories: [code, visualization, tidytuesday]\nimage: \"stock.png\"\n---\n\n\n[TidyTuesday](https://github.com/rfordatascience/tidytuesday) is a weekly data project aimed at improving skills in data manipulation, visualization and analysis using R programming language. This week, we are exploring daily stock prices and volume of 14 different tech companies and the raw data can be accessed [here](https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-02-07/readme.md). Check out my contributions to TidyTuesday [here](https://github.com/zwguo95/TidyTuesday).\n\n\n# Data cleaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MetBrewer)\nlibrary(showtext)\nlibrary(lubridate)\nlibrary(tidyverse)\n\nbig_tech_stock_prices <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-07/big_tech_stock_prices.csv')\nbig_tech_companies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-07/big_tech_companies.csv')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbig_tech <- c(\"AAPL\", \"MSFT\", \"GOOGL\", \"NVDA\", \"AMZN\", \"META\")\ndata <- big_tech_stock_prices %>%\n  select(stock_symbol, date, adj_close) %>%\n  filter((stock_symbol %in% big_tech) & (date >= \"2020-12-01\" & date <= \"2022-12-31\")) %>%\n  mutate(year_quarter = as.Date(paste0(year(date),\"-0\", quarter(date),\"-01\"))) %>%\n  group_by(year_quarter, stock_symbol) %>%\n  summarise(cur_mean = mean(adj_close)) %>%\n  ungroup() %>%\n  group_by(stock_symbol) %>%\n  mutate(lag_mean = dplyr::lag(cur_mean)) %>%\n  ungroup() %>%\n  filter(year_quarter != \"2020-04-01\") %>%\n  mutate(return = (cur_mean - lag_mean)/lag_mean * 100) %>%\n  group_by(year_quarter) %>%\n  mutate(return_mean = mean(return)) %>%\n  ungroup() %>%\n  mutate(return_diff = return - return_mean) %>%\n  arrange(year_quarter) %>%\n  mutate(stock_index = row_number()) %>%\n  group_by(year_quarter) %>%\n  mutate(label_anchor = mean(stock_index)) %>%\n  ungroup() %>%\n  mutate(quarter = c(rep(\"Q1 2021\", 6), rep(\"Q2 2021\", 6), rep(\"Q3 2021\", 6), rep(\"Q4 2021\", 6),\n                  rep(\"Q1 2022\", 6), rep(\"Q2 2022\", 6), rep(\"Q3 2022\", 6), rep(\"Q4 2022\", 6)))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year_quarter'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\n\n# Theme for graphing\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add_google(\"Pragati Narrow\")\nshowtext_auto()\n\ntheme_set(theme_minimal(base_family = \"Pragati Narrow\"))\n\ntheme_update(\n  # legend\n  legend.title = element_blank(),\n  legend.position = 'bottom',\n  legend.direction = 'horizontal',\n  legend.key.width = unit(1.5, \"cm\"),\n  legend.text = element_text(color = \"black\",  size=30),\n  \n  # axis\n  axis.text.x = element_blank(),\n  axis.text.y = element_text(size=25),\n  #axis.text.y = element_blank()\n  axis.ticks.length.y = unit(.1, \"lines\"),\n  text = element_text(size = 30),\n  \n  # titles\n  panel.grid = element_blank(),\n  plot.margin = margin(15, 40, 15, 40),\n  plot.background = element_rect(fill = \"#f5f5f2\", color = NA), \n  panel.background = element_rect(fill = \"#f5f5f2\", color = NA), \n  legend.title.align=1,\n  plot.title = element_text(\n    color = \"black\", \n    size = 70, \n    lineheight = 3,\n    face = \"bold\",\n    margin = margin(t = 10, b = 25, l = 0, r = 0),\n    hjust = 0.5\n  ),\n  plot.title.position = \"plot\",\n  plot.caption.position = \"plot\",\n  plot.caption = element_text(\n    color = \"grey20\", \n    size = 30,\n    lineheight = 0.5, \n    hjust = 0.5,\n    margin = margin(t = 40)))\n```\n:::\n\n\n## Graphing\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\nggplot(aes(x = stock_index, y = return)) + \n  geom_hline(\n      data = tibble(y = seq(-30, 30, by = 10)),\n      aes(yintercept = y),\n      color = \"grey70\",\n      size = .5\n    ) +\n  geom_segment(aes(xend = stock_index,\n                   yend = return_mean,\n                   color = stock_symbol),\n               show.legend = F\n    ) +\n  scale_color_manual(values=met.brewer(\"Cross\", 6),\n                     breaks = c(\"AAPL\", \"MSFT\", \"GOOGL\", \"NVDA\", \"AMZN\", \"META\"),\n                     labels=c(\"Apple\", \"Microsoft\", \"Google\", \"Navidia\", \"Amazon\", \"Meta\")) +\n  scale_y_continuous(labels = function(x) paste0(x, \"%\"), breaks = seq(-35, 35, 10)) +\n  geom_point(aes(color = stock_symbol)) + \n  geom_line(aes(x = stock_index, y = return_mean), color = \"grey60\", size = 1) +\n  geom_label(aes(x = label_anchor, 37, label = quarter), fill = NA, size = 10, label.padding = unit(.5, \"lines\"),\n    label.r = unit(.25, \"lines\"), color = \"grey60\") +\n  labs(x = \"\", y = \"Quarterly Stock Returns\",\n       title = \"STOCK COLLAPSE OF BIG TECHS\",\n       caption = str_wrap(\"Data comes from Yahoo Finance via Kaggle, collected and shared by Evan Gower. This graph illustrates the relative stock performance of selected big techs compared to their average | Visualization by Zhaowen Guo\", width = 300)) +\n  guides(colour = guide_legend(nrow = 1, override.aes = list(size = 5)))  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nâ„¹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n![](stock.png)\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}