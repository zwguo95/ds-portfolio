[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Zhaowen Guo",
    "section": "",
    "text": "I am a PhD candidate at the University of Washington, where I combine my expertise in both social and data science to develop and enhance metrics using innovative data collection and psychometric techniques.\nI enjoy connecting data from various sources, including administrative data, survey data, text data, image data, and spatial data, to deliver insightful analyses and support impact evaluations. My passion lies in communicating my findings through engaging data visualizations and promoting equity and inclusion in data science by knowledge sharing."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Zhaowen Guo",
    "section": "Education",
    "text": "Education\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Zhaowen Guo",
    "section": "Experience",
    "text": "Experience\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#agenda",
    "href": "tutorials/workshop_visual_r.html#agenda",
    "title": "Visualizing Data with R",
    "section": "Agenda",
    "text": "Agenda\n\nggplot2 and elements of information visualization\nVisualizing tabular data\n\nInformation from one variable\nInformation from multiple variables"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#graphic-systems-in-r",
    "href": "tutorials/workshop_visual_r.html#graphic-systems-in-r",
    "title": "Visualizing Data with R",
    "section": "Graphic systems in R",
    "text": "Graphic systems in R\n\n\nImperative programming\n\nStep-by-step instructions to control the exact construction of output\nHands on and more work\nbase, grid, tile\n\nDeclarative programming\n\nAllow software to apply a standard solution\nCustomize with a stylesheet\nggplot2"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#what-is-ggplot2",
    "href": "tutorials/workshop_visual_r.html#what-is-ggplot2",
    "title": "Visualizing Data with R",
    "section": "What is ggplot2",
    "text": "What is ggplot2\n\n\nGraphics link data to dimensions of specific aesthetic objects, which are distinguishable by their geometric structure and modifiable in scale and style\nUsers supply the data and request a geometry, leaving others to the software\nLayered grammar of graphics\n\nLayers: components of a graph connected by +\nAesthetics: specified inside layers about how layers appear"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#elements-of-information-visualization",
    "href": "tutorials/workshop_visual_r.html#elements-of-information-visualization",
    "title": "Visualizing Data with R",
    "section": "Elements of information visualization",
    "text": "Elements of information visualization\nObjects\n\n\nKnown as \\(geoms\\) in ggplot2 which specifies how the data are presented on the plot\nPoints or texts can represent location: geom_point(), geom_text(), geom_label()\nLines can represent numerical values and relationships: geom_line(), geom_smooth()\nPolygons can represent area or size: geom_rect(), geom_bar()"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#elements-of-information-visualization-1",
    "href": "tutorials/workshop_visual_r.html#elements-of-information-visualization-1",
    "title": "Visualizing Data with R",
    "section": "Elements of information visualization",
    "text": "Elements of information visualization\nAesthetics\n\n\nColors: use default colors or brewer palettes ColorBrewer, R palettes and specify fill or color argument\nLine types: specify the linetype argument by an integer or a character (see reference here)\nDot types: specify the shape argument by an integer or a character (see reference here)\nStacked bar plots or histograms: specify the fill argument"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#elements-of-information-visualization-2",
    "href": "tutorials/workshop_visual_r.html#elements-of-information-visualization-2",
    "title": "Visualizing Data with R",
    "section": "Elements of information visualization",
    "text": "Elements of information visualization\nComponents\n\nTitle\nLegend\nAnnotations\nLabels\nBackground"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#steps-to-create-a-ggplot2-graphic",
    "href": "tutorials/workshop_visual_r.html#steps-to-create-a-ggplot2-graphic",
    "title": "Visualizing Data with R",
    "section": "Steps to create a ggplot2 graphic",
    "text": "Steps to create a ggplot2 graphic\n\n\nEstablish a mapping between data variables and plotting dimensions or elements\nApply the mapping to one or more standardized aesthetic elements\nDraw the resulting set of graphical objects"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#an-illustration",
    "href": "tutorials/workshop_visual_r.html#an-illustration",
    "title": "Visualizing Data with R",
    "section": "An illustration",
    "text": "An illustration\nHow did GDP per capita change over time in Oceanian countries?\n\noptions(scipen = 999) # prevent scientific notation like e\nlibrary(gapminder) # load gapminder dataset from gapminder package\nlibrary(ggplot2) # load ggplot2 package for visualization\nlibrary(tidyverse) # load tidyverse package for data wrangling\nstr(gapminder) # examine gapminder dataset\n\ntibble [1,704 x 6] (S3: tbl_df/tbl/data.frame)\n $ country  : Factor w/ 142 levels \"Afghanistan\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ continent: Factor w/ 5 levels \"Africa\",\"Americas\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ year     : int [1:1704] 1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ...\n $ lifeExp  : num [1:1704] 28.8 30.3 32 34 36.1 ...\n $ pop      : int [1:1704] 8425333 9240934 10267083 11537966 13079460 14880372 12881816 13867957 16317921 22227415 ...\n $ gdpPercap: num [1:1704] 779 821 853 836 740 ...\n\n\n\noceania <- gapminder %>%\n  filter(continent == \"Oceania\")"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#an-illustration-1",
    "href": "tutorials/workshop_visual_r.html#an-illustration-1",
    "title": "Visualizing Data with R",
    "section": "An illustration",
    "text": "An illustration\nggplot(oceania, # input the data\n  aes(x = year, \n      y = gdpPercap, \n      color = country,\n      linetype = country)) + # establish aesthetic mappings\n  geom_line(size = 1) + # apply mapping to geom objects\n  ggtitle(\"Life expectancy in Oceanian countries over time\") + # add title\n  labs(x = \"Year\", y = \"GDP per capita\") + # add labels\n  theme_bw() # change background to white background with grey gridlines"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#an-illustration-2",
    "href": "tutorials/workshop_visual_r.html#an-illustration-2",
    "title": "Visualizing Data with R",
    "section": "An illustration",
    "text": "An illustration\n\nPlotData\n\n\n\nggplot(oceania, # input the data\n  aes(x = year, \n      y = gdpPercap, \n      color = country,\n      linetype = country)) + # establish aesthetic mappings\n  geom_line(size = 1) + # apply mapping to geom objects\n  ggtitle(\"Life expectancy in Oceanian countries over time\") + # add title\n  labs(x = \"Year\", y = \"GDP per capita\") + # add labels\n  theme_bw() # change background to white background with grey gridlines\n\n\n\n\n\n\n\nknitr::kable(oceania)\n\n\n\n\ncountry\ncontinent\nyear\nlifeExp\npop\ngdpPercap\n\n\n\n\nAustralia\nOceania\n1952\n69.120\n8691212\n10039.60\n\n\nAustralia\nOceania\n1957\n70.330\n9712569\n10949.65\n\n\nAustralia\nOceania\n1962\n70.930\n10794968\n12217.23\n\n\nAustralia\nOceania\n1967\n71.100\n11872264\n14526.12\n\n\nAustralia\nOceania\n1972\n71.930\n13177000\n16788.63\n\n\nAustralia\nOceania\n1977\n73.490\n14074100\n18334.20\n\n\nAustralia\nOceania\n1982\n74.740\n15184200\n19477.01\n\n\nAustralia\nOceania\n1987\n76.320\n16257249\n21888.89\n\n\nAustralia\nOceania\n1992\n77.560\n17481977\n23424.77\n\n\nAustralia\nOceania\n1997\n78.830\n18565243\n26997.94\n\n\nAustralia\nOceania\n2002\n80.370\n19546792\n30687.75\n\n\nAustralia\nOceania\n2007\n81.235\n20434176\n34435.37\n\n\nNew Zealand\nOceania\n1952\n69.390\n1994794\n10556.58\n\n\nNew Zealand\nOceania\n1957\n70.260\n2229407\n12247.40\n\n\nNew Zealand\nOceania\n1962\n71.240\n2488550\n13175.68\n\n\nNew Zealand\nOceania\n1967\n71.520\n2728150\n14463.92\n\n\nNew Zealand\nOceania\n1972\n71.890\n2929100\n16046.04\n\n\nNew Zealand\nOceania\n1977\n72.220\n3164900\n16233.72\n\n\nNew Zealand\nOceania\n1982\n73.840\n3210650\n17632.41\n\n\nNew Zealand\nOceania\n1987\n74.320\n3317166\n19007.19\n\n\nNew Zealand\nOceania\n1992\n76.330\n3437674\n18363.32\n\n\nNew Zealand\nOceania\n1997\n77.550\n3676187\n21050.41\n\n\nNew Zealand\nOceania\n2002\n79.110\n3908037\n23189.80\n\n\nNew Zealand\nOceania\n2007\n80.204\n4115771\n25185.01"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#information-from-one-variable",
    "href": "tutorials/workshop_visual_r.html#information-from-one-variable",
    "title": "Visualizing Data with R",
    "section": "Information from one variable",
    "text": "Information from one variable\n\nHistogramsDensity plotsBoxplotsBarplotsLollipop charts\n\n\n\n# show frequencies of a variable\ngapminder %>%\n  filter(year == 1952) %>%\n  ggplot(aes(x = lifeExp)) + \n  geom_histogram(binwidth = 2) +\n  theme_light() +\n  labs(x = \"Life Expectancy\", y = \"Count\", title = \"Life Expectancy in 1952\")\n\n\n\n\n\n\n\n# show frequencies of a variable\ngapminder %>%\n  filter(year == 1952) %>%\n  ggplot(aes(x = lifeExp)) + \n  geom_density(size = 1.5, alpha = 0.2, fill = \"red\") +\n  theme_light() +\n  labs(x = \"Life Expectancy\", y = \"Count\", title = \"Life Expectancy in 1952\")\n\n\n\n\n\n\n\n# show distribution of a variable (median, 1st, 3rd quantiles, outliers)\ngapminder %>% filter(year == 1952, continent==\"Europe\") %>%\n  ggplot(aes(y = lifeExp)) + \n  geom_boxplot(fill = \"grey\", color = \"blue\", outlier.shape = 1) + # adjust aesthetics\n  theme_light() +\n  labs(title = \"Life Expectancy in 1952 (Europe)\", \n       y = \"Life Expectancy\", \n       x = \"\") \n\n\n\n\n\n\n\n# show distribution of a discrete variable \nggplot(gapminder, \n       aes(x = continent,\n           fill = continent)) + # differentiate the filled colors\n  geom_bar() + \n  theme_classic() + \n  labs(y = \"Number of countries\", x = \"Continent\")\n\n\n\n\n\n\n\namericas <- gapminder %>% \n  filter(year == 2007 & continent == \"Americas\") %>% \n  arrange(gdpPercap) %>% \n  mutate(country = factor(country, levels = country))\n\nggplot(americas, aes(x = gdpPercap, y = country)) +\n  geom_segment(aes(x = 0, xend = gdpPercap, \n                   y = country, yend = country), # which is why we need to make country a factor\n               color = \"black\") + \n  geom_point(colour = \"blue\", size = 2, alpha = 0.8) +\n  scale_x_continuous(expand = c(0, 0), \n                     limits = c(0, max(americas$gdpPercap) * 1.1),\n                     labels = scales::dollar) + \n  theme_bw()"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#information-from-multiple-variables",
    "href": "tutorials/workshop_visual_r.html#information-from-multiple-variables",
    "title": "Visualizing Data with R",
    "section": "Information from multiple variables",
    "text": "Information from multiple variables\n\nMultiplesLayered density plotsGrouped barplots\n\n\n\ngapminder %>%\n  ggplot(aes(x = lifeExp)) + \n  geom_histogram() + \n  facet_wrap(~ continent, ncol = 3) +\n  labs(title = \"Life expectancy distribution by continent\") +\n  theme_minimal()\n\n\n\n\n\n\n\ngapminder %>%\n  filter(year == 2007 & continent != \"Oceania\") %>%\n  ggplot(aes(x = lifeExp)) + \n  geom_density(aes(fill = continent), size = 0.1, alpha = 0.5) + \n  scale_fill_brewer(palette = \"Set1\") +\n  labs(title = \"Life expectancy distribution in 2007\") +\n  theme_minimal()\n\n\n\n\n\n\n\ngapminder %>% \n  filter(year > 1990) %>%\n  group_by(year, continent) %>%\n  summarise(totalpop = sum(as.double(pop))) %>%\n  ggplot(aes(x = year, y = totalpop, fill = continent)) + \n  geom_col(position = \"dodge\", size = 0.2, alpha = 0.8) + # dodge overlapping objects side by side \n  scale_x_continuous(breaks = seq(1992, 2007, 5), expand = c(0, 0)) +\n  scale_y_continuous(labels = scales::comma, expand = c(0, 0)) +\n  scale_fill_brewer(palette = \"Set1\") +\n  theme_bw()"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#practices",
    "href": "tutorials/workshop_visual_r.html#practices",
    "title": "Visualizing Data with R",
    "section": "Practices",
    "text": "Practices\nExercise 1: Make a scatter plot with average GDP per capita across all countries on the y-axis and year on the x-axis.\nExercise 2: Break down the plot from exercise 1 by continent, using colors to distinguish the points and transforming mean GDP per capita on the log scale.\nExercise 3: Make a collection of bar plots faceted by year that compare mean GDP per capita across countries in a given year. Orient the plots to make it easier to read the continent labels.\nExercise 4: What is the relationship between life expectancy and GDP per capita in 2007 by non-Oceanian continents?"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#solutions",
    "href": "tutorials/workshop_visual_r.html#solutions",
    "title": "Visualizing Data with R",
    "section": "Solutions",
    "text": "Solutions\n\nSolution 1Solution 2Solution 3Solution 4\n\n\n\ngapminder %>%\n  group_by(year) %>%\n  summarize(meanGDPpc = mean(gdpPercap)) %>%\n  ggplot(aes(x = year, y = meanGDPpc)) +\n  geom_point()\n\n\n\n\n\n\n\ngapminder %>%\n  group_by(year, continent) %>% # aggregate the information by year by continent\n  summarize(meanGDPpc = mean(gdpPercap)) %>%\n  ggplot(aes(x = year, y = meanGDPpc, color = continent)) +\n  geom_point() +\n  scale_y_log10() # apply the log scale to GDP per capita\n\n\n\n\n\n\n\ngapminder %>%\n  group_by(year, continent) %>%\n  summarize(meanGDPpc = mean(gdpPercap)) %>%\n  ggplot(aes(x = continent, y = meanGDPpc)) +\n  geom_col() +\n  facet_wrap(~ year) +\n  coord_flip() # flip the coordinates so that the continent names are visible\n\n\n\n\n\n\n\ngapminder %>%\n  filter(year == 2007 & continent != \"Oceania\") %>% \n  ggplot(aes(x = log(gdpPercap),\n             y = lifeExp,\n             color = continent)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"lm\") + \n  facet_wrap(~ continent)"
  },
  {
    "objectID": "tutorials/workshop_visual_r.html#bonus-animations",
    "href": "tutorials/workshop_visual_r.html#bonus-animations",
    "title": "Visualizing Data with R",
    "section": "Bonus: animations!",
    "text": "Bonus: animations!\nCheck out plotly package\n\nlibrary(plotly)\nanimate_gapminder <- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +\n  geom_point(aes(size = pop, ids = country, frame = year)) +\n  geom_smooth(se = FALSE, method = \"lm\") +\n  scale_x_log10() + \n  theme_bw() + \n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme(legend.position = \"none\") # remove legend\n\nggplotly(animate_gapminder) %>% \n  highlight(\"plotly_hover\") %>%\n  animation_slider(\n    currentvalue = list(prefix = \"Year \", font = list(color=\"black\"))\n  )\n\n\n\n\n\n\n\nCSSCR Workshop"
  },
  {
    "objectID": "dataviz.html",
    "href": "dataviz.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Visualizing Public Support for Government Surveillance\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\nvisualization\n\n\n\n\n\n\n\n\n\n\n\nDec 20, 2022\n\n\nZhaowen Guo\n\n\n\n\n\n\n  \n\n\n\n\nGreen Space for Everyone? Visualizing Tree Equity Gap\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\nvisualization\n\n\n\n\n\n\n\n\n\n\n\nDec 20, 2022\n\n\nZhaowen Guo\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#why-using-word-embeddings",
    "href": "tutorials/workshop_word_embedding_r.html#why-using-word-embeddings",
    "title": "Word Embeddings",
    "section": "Why using word embeddings?",
    "text": "Why using word embeddings?\n\nThe corpus comes from Congressional Record which records all remarks made by senators and representatives on the floor of the US Congress\nUse congressional record for the 114th Congress as an example\n\nTwo variables: speech, speech_id\n67,557 observations"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#represent-the-text-using-bow",
    "href": "tutorials/workshop_word_embedding_r.html#represent-the-text-using-bow",
    "title": "Word Embeddings",
    "section": "Represent the text using BOW",
    "text": "Represent the text using BOW\nlibrary(tidytext)\nlibrary(SnowballC)\nlibrary(tidyverse)\n\ndata <- readRDS(\"data114.RDS\")"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#represent-the-text-using-bow-1",
    "href": "tutorials/workshop_word_embedding_r.html#represent-the-text-using-bow-1",
    "title": "Word Embeddings",
    "section": "Represent the text using BOW",
    "text": "Represent the text using BOW\nlibrary(tidytext)\nlibrary(SnowballC)\nlibrary(tidyverse)\n\ndata <- readRDS(\"data114.RDS\") %>%\n  unnest_tokens(word, speech) %>%\n  anti_join(get_stopwords()) %>%\n  mutate(stem = wordStem(word))"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#represent-the-text-using-bow-2",
    "href": "tutorials/workshop_word_embedding_r.html#represent-the-text-using-bow-2",
    "title": "Word Embeddings",
    "section": "Represent the text using BOW",
    "text": "Represent the text using BOW\nlibrary(tidytext)\nlibrary(SnowballC)\nlibrary(tidyverse)\n\ndata <- readRDS(\"data114.RDS\") %>%\n  unnest_tokens(word, speech) %>%\n  anti_join(get_stopwords()) %>%\n  mutate(stem = wordStem(word)) %>%\n  count(speech_id, stem) %>%\n  bind_tf_idf(stem, speech_id, n) %>%\n  cast_dfm(speech_id, stem, tf_idf)"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#what-do-we-find",
    "href": "tutorials/workshop_word_embedding_r.html#what-do-we-find",
    "title": "Word Embeddings",
    "section": "What do we find?",
    "text": "What do we find?\n\nBOW representation is\n\nextremely sparse (99.92% sparse)\nhigh-dimensional (98,235 features)"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#represent-the-text-using-word-embeddings",
    "href": "tutorials/workshop_word_embedding_r.html#represent-the-text-using-word-embeddings",
    "title": "Word Embeddings",
    "section": "Represent the text using word embeddings",
    "text": "Represent the text using word embeddings\n\nSource: Rodriguez & Spirling, 2022"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#represent-the-text-using-word-embeddings-1",
    "href": "tutorials/workshop_word_embedding_r.html#represent-the-text-using-word-embeddings-1",
    "title": "Word Embeddings",
    "section": "Represent the text using word embeddings",
    "text": "Represent the text using word embeddings\nWhy do we use them?\n\nUnderstand language use\n\nacross time\nacross groups\nstereotype and bias\n\nFeed into downstream NLP implementations"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#how-to-find-word-embeddings",
    "href": "tutorials/workshop_word_embedding_r.html#how-to-find-word-embeddings",
    "title": "Word Embeddings",
    "section": "How to find word embeddings?",
    "text": "How to find word embeddings?\n\nSingular Vector Decomposition (SVD)\nNeural network-based techniques\n\nWord2Vec\nGloVe\nlanguage models with transformers such as BERT"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#implementation-of-svd",
    "href": "tutorials/workshop_word_embedding_r.html#implementation-of-svd",
    "title": "Word Embeddings",
    "section": "Implementation of SVD",
    "text": "Implementation of SVD\n\nskipgram probabilitiespointwise mutual information (PMI)\n\n\nnested_data <- readRDS(\"data114.RDS\") %>%\n  unnest_tokens(word, speech) %>%\n  anti_join(get_stopwords()) %>%\n  group_by(word) %>%\n  filter(n() >= 50) %>%\n  ungroup() %>%\n  nest(words = c(word))\n  \nslide_windows <- function(tbl, window_size) {\n  skipgrams <- slider::slide(\n    tbl, ~.x, .after = window_size - 1, .step = 1, .complete = T\n  )\n  safe_mutate <- safely(mutate)\n  \n  out <- map2(skipgrams, 1:length(skipgrams), ~safe_mutate(.x, window_id = .y))\n  \n  out %>%\n    transpose() %>%\n    pluck(\"result\") %>%\n    compact() %>%\n    bind_rows()\n}\n\n\nlibrary(widyr) \nlibrary(furrr)\nplan(multisession)\n\npmi <- nested_data %>%\n  mutate(words = future_map(words, slide_windows, 4)) %>%\n  unnest(words) %>%\n  unite(window_id, speech_id, window_id) %>%\n  pairwise_pmi(word, window_id)"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#explore-word-vectors",
    "href": "tutorials/workshop_word_embedding_r.html#explore-word-vectors",
    "title": "Word Embeddings",
    "section": "Explore word vectors",
    "text": "Explore word vectors\nThe most similar words to “tax”:\n\n\n\nword_vectors <- pmi %>%\n  widely_svd(item1, item2, pmi, nv = 100, maxit = 1000)\n  \nnearest_neighbors <- function(df, token){\n  df %>% \n    widely(~. %*% (.[token, ]),\n           sort = T,\n           maximum_size = NULL)(item1, dimension, value) %>%\n    select(-item2)\n}\n\nword_vectors %>%\n  nearest_neighbors(\"tax\")"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#explore-word-vectors-1",
    "href": "tutorials/workshop_word_embedding_r.html#explore-word-vectors-1",
    "title": "Word Embeddings",
    "section": "Explore word vectors",
    "text": "Explore word vectors\nThe first 6 principal components with top 10 contributing words:\n\n\n\nword_vectors %>%\n  filter(dimension <= 6) %>%\n  group_by(dimension) %>%\n  top_n(10, abs(value)) %>%\n  ungroup() %>%\n  mutate(dimension = as.factor(dimension),\n         item1 = reorder_within(item1, value, dimension)) %>%\n  ggplot(aes(item1, value, fill = dimension)) +\n  geom_col(show.legend = F) +\n  facet_wrap(~ dimension, scales = \"free_y\", ncol = 3) +\n  coord_flip() +\n  scale_x_reordered() + \n  theme_bw()"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#explore-word-vectors-2",
    "href": "tutorials/workshop_word_embedding_r.html#explore-word-vectors-2",
    "title": "Word Embeddings",
    "section": "Explore word vectors",
    "text": "Explore word vectors\nDo politicians discuss “tax” in different ways?\n\n\n\nDemocrats\n\n\nRepublicans"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#implementation-of-glove",
    "href": "tutorials/workshop_word_embedding_r.html#implementation-of-glove",
    "title": "Word Embeddings",
    "section": "Implementation of GloVe",
    "text": "Implementation of GloVe\n::: panel-tabset #### skipgram probabilities"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#what-else-should-be-aware-of",
    "href": "tutorials/workshop_word_embedding_r.html#what-else-should-be-aware-of",
    "title": "Word Embeddings",
    "section": "What else should be aware of?",
    "text": "What else should be aware of?\n\nEmbedding alignment\nBoostrapping"
  },
  {
    "objectID": "tutorials/workshop_word_embedding_r.html#references",
    "href": "tutorials/workshop_word_embedding_r.html#references",
    "title": "Word Embeddings",
    "section": "References",
    "text": "References\nChris Moody’s tutorial on building word embeddings from scratch\nDmitriy Selivanov’s tutorial on GloVe Word Embeddings\nJulia Silge’s blog post on word vectors with tidy data principles\nChris Bail’s tutorial on word embedings\nHvitfeldt and Silge, 2022. Supervised Machine Learning for Text Analysis in R"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Visualizing Public Support for Government Surveillance\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\nvisualization\n\n\n\n\n\n\n\n\n\n\n\nDec 20, 2022\n\n\nZhaowen Guo\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "dataviz/tree-equity/index.html",
    "href": "dataviz/tree-equity/index.html",
    "title": "Green Space for Everyone? Visualizing Tree Equity Gap",
    "section": "",
    "text": "Urban green spaces, such as parks, gardens, and forests, provide numerous benefits in creating livable cities. They help improve air and water quality, reduce heat islands, and increase physical activity and mental health. However, not all communities have equal access to these benefits, leading to the concept of “tree equity.”\nTree equity refers to the fair distribution of urban green spaces and trees, regardless of a community’s socio-economic status, race, or ethnicity. American Forests, a non-profit organization dedicated to protecting and restoring forests, has been working to measure and improve tree equity across the United States.\nIn this blog post, I will show you how to visualize tree equity score data to tell a compelling story. All code can be found here."
  },
  {
    "objectID": "dataviz/tree-equity/index.html#data-collection",
    "href": "dataviz/tree-equity/index.html#data-collection",
    "title": "Green Space for Everyone? Visualizing Tree Equity Gap",
    "section": "1 Data Collection",
    "text": "1 Data Collection\nTree equity score data are currently hosted on this webpage, where users are required to manually download zip files containing geospatial data for each state. Furthermore, each shapefile includes not only tree equity scores, but also several other variables. Thus, we need to find an efficient method to automate the process of downloading files with minimal manual intervention and extract the desired variable of interest - the tree equity score - from the shapefiles.\nUpon checking the web addresses of several files, a pattern has become apparent: each URL shares a similar structure in its file name, while also possessing a unique postal code. This discovery suggests that it is possible to create a script that can automatically scrape the files. Fortunately, unzip() in base R and sf package offer a convenient solution for unzipping files and reading shapefiles, and we can easily write a function to automate this process.\n```{r}\nlibrary(sf)\nlibrary(tidyverse)\n\nread_shape_URL <- function(URL){\n  cur_tempfile <- tempfile()\n  download.file(url = URL, destfile = cur_tempfile)\n  out_directory <- tempfile()\n  unzip(cur_tempfile, exdir = out_directory)\n  \n  read_sf(dsn = out_directory)\n}\n```\nThe question that I am interested in is: which state has the greatest disparity in tree equity score across counties, as measured by the difference between the maximum and minimum tree equity scores within each state. Also, it is important to note that data availability may vary as not all states have available tree equity score data. To verify the existence of a URL, we can use Rcurl package and write a for-loop to produce the key variable of interest, the tree equity gap.\n```{r}\nstates <- read.csv(\"state-names.csv\") # downloaded https://worldpopulationreview.com/states/state-abbreviations\n\nstate_names <- rep(NA, 51)\ntes_gaps <- rep(NA, 51)\nfor (i in 1:nrow(states)){\n  state <- states$lower_code[i]\n  state_names[i] <- state\n  print(state)\n  URL <- paste0(\"https://national-tes-data-share.s3.amazonaws.com/national_tes_share/\", state, \".zip.zip\")\n  if (RCurl::url.exists(URL) == T) {\n    map <- read_shape_URL(paste0(\"https://national-tes-data-share.s3.amazonaws.com/national_tes_share/\", state, \".zip.zip\"))\n    tes_gap <- max(map$tes) - min(map$tes)\n    tes_gaps[i] <- tes_gap\n  } else {\n    tes_gaps[i] <- NA\n  }\n}\n\ndata <- data.frame(lower_code = state_names,\n                   gap = tes_gaps) %>%\n  cbind(states[1])\n```"
  },
  {
    "objectID": "dataviz/tree-equity/index.html#data-cleaning",
    "href": "dataviz/tree-equity/index.html#data-cleaning",
    "title": "Green Space for Everyone? Visualizing Tree Equity Gap",
    "section": "2 Data Cleaning",
    "text": "2 Data Cleaning\nGreat, we now have our data! The next step is to clean and prepare it for visualization. With the consideration of working with spatial data across multiple regions and the fact that the tree equity gap is a continuous variable, hexbin maps become a desirable choice. Hexbin maps divide the map area into small hexagonal bins and consolidate the data points within them, presenting a clear and compact depiction of the vast amount of data.\n```{r}\nlibrary(geojsonio)\nlibrary(rgeos)\n\n# create a base hexbin map of US\nhex_states <- geojson_read(\"us_states_hexgrid.geojson\", what = \"sp\") \n\n# extract state names\nhex_states@data <- hex_states@data %>%\n  mutate(google_name = str_replace(google_name, \" \\\\(United States\\\\)\", \"\"))\n\n# create a data frame for hexbin map\nhex_states_fortify <- broom::tidy(hex_states, region = \"google_name\")\n\n# match state names\ndata_map <- hex_states_fortify %>%\n  right_join(data, by = c(\"id\" = \"state\")) %>%\n  mutate(id = state.abb[match(id, state.name)])\ndata_map$id[data_map$group == \"District of Columbia.1\"] <- \"DC\"\n\nlabels <- cbind.data.frame(data.frame(gCentroid(hex_states, byid = T),\n                                      id = hex_states@data$iso3166_2))\ndata_map <- data_map %>%\n  right_join(labels, by = \"id\") %>%\n  filter(is.na(gap) == F)\n```"
  },
  {
    "objectID": "dataviz/tree-equity/index.html#data-visualization",
    "href": "dataviz/tree-equity/index.html#data-visualization",
    "title": "Green Space for Everyone? Visualizing Tree Equity Gap",
    "section": "3 Data Visualization",
    "text": "3 Data Visualization\nWe now have our spatial polygon data frame ready and can visualize it! To make it visually appealing, I pick a custom Google font “Pragati Narrow” for the graph and a stunning color palette from the scico package. One trick is to adjust text colors that contrast with the background color. For instance, in the case of Washington D.C., which has the narrowest gap in tree equity scores, the bin’s background can be made lighter. However, if white text is still used as in other areas, the label may not be easily visible. To mitigate this, we can establish a threshold for switching the text color as necessary.\n```{r}\nlibrary(scico)\nlibrary(showtext)\ntheme_set(theme_minimal(base_family = \"Pragati Narrow\"))\n\ntheme_update(\n  # legend\n  legend.title = element_blank(),\n  legend.position = 'top',\n  legend.direction = 'horizontal',\n  legend.key.width = unit(1.5, \"cm\"),\n  legend.text = element_text(color = \"black\",  size=30),\n  \n  # axis\n  axis.text.x = element_blank(),\n  axis.text.y = element_blank(),\n  \n  # titles\n  panel.grid = element_blank(),\n  plot.margin = margin(15, 30, 15, 30),\n  plot.background = element_rect(fill = \"#f5f5f2\", color = NA), \n  panel.background = element_rect(fill = \"#f5f5f2\", color = NA), \n  legend.title.align=1,\n  plot.title = element_text(\n    color = \"black\", \n    size = 70, \n    face = \"bold\",\n    margin = margin(t = 15),\n    hjust = 0.5\n  ),\n  plot.subtitle = element_text(\n    color = \"grey10\", \n    size = 45,\n    lineheight = 3,\n    margin = margin(t = 5),\n    hjust = 0.5\n  ),\n  plot.title.position = \"plot\",\n  plot.caption.position = \"plot\",\n  plot.caption = element_text(\n    color = \"grey20\", \n    size = 20,\n    lineheight = 0.5, \n    hjust = 0.5,\n    margin = margin(t = 40))\n)\n\ndata_map %>% \n  ggplot () +\n  geom_polygon(aes(x = long, y = lat, group = group, fill = gap), linewidth = 0.5) +\n  scale_fill_scico(palette = \"lajolla\", direction = 1) + \n  geom_text(aes(x=x, y=y, label=id, color = gap < 60), size = 8, alpha = 0.5, \n             show.legend = F) +\n  scale_color_manual(values = c(\"white\", \"black\")) +\n  coord_map(clip = \"off\") +\n  labs(title = \"TREE EQUITY GAP\",\n       subtitle = \"County-level disparities in tree equity scores within each state\",\n       x = \"\", y = \"\",\n       caption= \n         str_wrap(\n       \"Data comes from the Green Space Data Challenge, \n       collected and shared by the American Forests. \n       Tree Equity Score (TES) computes how much tree canopy and surface temperature align with income, \n       employment, race, age and health factors in the U.S | Visualization by Zhaowen Guo\", width=150))\n```"
  },
  {
    "objectID": "dataviz/tree-equity/index.html#implications",
    "href": "dataviz/tree-equity/index.html#implications",
    "title": "Green Space for Everyone? Visualizing Tree Equity Gap",
    "section": "4 Implications",
    "text": "4 Implications\nWhat do we learn from this visualization? The graph clearly illustrates the unequal distribution of green spaces, particularly in states like Ohio and Minnesota, where the gap is much more pronounced. This calls for prompt and effective action to rectify this imbalance."
  },
  {
    "objectID": "statistics.html",
    "href": "statistics.html",
    "title": "Statistics",
    "section": "",
    "text": "No matching items"
  }
]